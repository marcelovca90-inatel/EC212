registro Cor { int R; int G; int B };
registro Pixel { int x, int y, int z, Cor cor }
registro Poligono { Pixel[] pixels; }
registro Imagem { Poligono[] poligonos; }

// estruturas de dados globais
Buffer = Mapa<[x][y],Cor>
ZBuffer = Mapa<[x][y],Inteiro>

procedimento ZBuffer

    // inicializa os buffers de cor e profundidade
    para cada Pixel em Buffer
        Buffer[Pixel.x][Pixel.y] = COR_DE_FUNDO;
        ZBuffer[Pixel.x][Pixel.y] = +INFINITO;

    // constroi a imagem
    para cada Poligono em Imagem.poligonos
        para cada Pixel em Poligono.pixels
            se Pixel.z < ZBuffer[Pixel.x][Pixel.y] entÃ£o
                Buffer[Pixel.x][Pixel.y] = Pixel.cor
                ZBuffer[Pixel.x][Pixel.y] = Pixel.z

    // desenha a imagem
    para cada Par<[x][y],Cor> em Buffer
        pintar(Par.x, Par.y, Par.cor)
fim_procedimento
